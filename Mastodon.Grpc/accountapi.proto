syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "account.proto";
import "activity.proto";
import "context.proto";
import "instance.proto";
import "instancev1.proto";
import "list.proto";
import "rule.proto";
import "relationship.proto";
import "status.proto";

option csharp_namespace = "Mastodon.Grpc";

service AccountApi {    

  rpc GetAccount (google.protobuf.StringValue) returns (Account)
  {
	option (google.api.http) = {
      get: "/api/v1/accounts/{value}"
    };
  }

  rpc GetStatuses (GetStatusesRequest) returns (Statuses)
  {
	option (google.api.http) = {
      get: "/api/v1/accounts/{accountId}/statuses"
      response_body: "data"
    };
  }

  rpc Follow (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/accounts/{value}/follow"
    };
  }
  
  rpc Unfollow (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/statuses/{value}/unfollow"
    };
  }
  
  rpc Block (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/accounts/{value}/block"
    };
  }
  
  rpc Unblock (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/statuses/{value}/unblock"
    };
  }

  rpc Mute (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/accounts/{value}/mute"
    };
  }
  
  rpc Unmute (google.protobuf.StringValue) returns (Relationship)
  {
	option (google.api.http) = {
      post: "/api/v1/statuses/{value}/unmute"
    };
  }
}

message GetStatusesRequest
{
    // Account ID.
    string accountId = 1;

    // Return results older than this ID.
    optional string max_id = 2;
    
    // Return results newer than this ID.
    optional string since_id = 3;

    // Return results immediately newer than this ID.
    optional string min_id = 4;

    // Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.
    optional uint32 limit = 5;

    // Filter out statuses without attachments.
    optional bool only_media = 6;

    // Filter out statuses in reply to a different account.
    optional bool exclude_replies = 7;

    // Filter out boosts from the response.
    optional bool exclude_reblogs = 8;

    // Filter for pinned statuses only.
    optional bool pinned = 9;

    // Filter for statuses using a specific hashtag.
    optional string tagged = 10;
}